name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Decode Keystore
        run: |
          echo "Decoding keystore file..."
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > keystore.jks
          
      - name: Copy keystore to app directory
        run: |
          echo "Copying keystore file to app directory"
          cp keystore.jks app/

      - name: Build Release APK and Bundle
        run: |
          ./gradlew assembleRelease bundleRelease \
            -Pandroid.signing.keyAlias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.signing.keyPassword="${{ secrets.KEY_PASSWORD }}" \
            -Pandroid.signing.storeFile="keystore.jks" \
            -Pandroid.signing.storePassword="${{ secrets.KEY_STORE_PASSWORD }}" \
            --no-daemon

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload Release Bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-bundle
          path: app/build/outputs/bundle/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Find APKs
        run: |
          find app/build/outputs/apk/release -name "*.apk" -type f -exec ls -la {} \;
          APK_FILES=$(find app/build/outputs/apk/release -name "*.apk" -type f)
          echo "$APK_FILES" > apk_list.txt
          
      - name: Upload APKs to Release
        run: |
          while IFS= read -r apk_file; do
            if [ -n "$apk_file" ]; then
              asset_name=$(basename "$apk_file")
              echo "Uploading $asset_name..."
              gh release upload ${{ github.ref }} "$apk_file" --clobber
            fi
          done < apk_list.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Bundle to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.aab
          asset_name: ClickCounter-${{ github.ref_name }}.aab
          asset_content_type: application/zip