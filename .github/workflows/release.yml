name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Decode Keystore
        run: |
          echo "Decoding keystore file..."
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ${{ secrets.KEYSTORE_PATH }}
          
      - name: Create keystore.properties
        run: |
          echo "Creating keystore.properties file..."
          cat <<EOF > keystore.properties
          storeFile=${{ secrets.KEYSTORE_PATH }}
          storePassword=${{ secrets.KEY_STORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF
          
      - name: Copy keystore.properties to app directory
        run: |
          echo "Copying keystore.properties to app directory"
          cp keystore.properties app/

      - name: Build Release APK and Bundle
        run: ./gradlew assembleRelease bundleRelease --no-daemon
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/

      - name: Upload Release Bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-bundle
          path: app/build/outputs/bundle/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Find APK
        run: |
          find app/build/outputs/apk/release -name "*.apk" -type f -exec ls -la {} \;
          echo "APK_FILE=$(find app/build/outputs/apk/release -name "*.apk" -type f | head -n 1)" >> $GITHUB_ENV

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APK_FILE }}
          asset_name: ${{ env.APK_FILE }}
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Bundle to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.aab
          asset_name: ClickCounter-${{ github.ref_name }}.aab
          asset_content_type: application/zip